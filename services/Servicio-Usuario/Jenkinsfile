pipeline{
    agent any
    tools {nodejs "node"}
    environment {
    imagename = "crisalva25/sa_servicio-usuario"
    registryCredential = 'dockerhub'
    dockerImage = ''
    }
    stages{
        stage("Build"){
            steps{
                echo "Ahora vamos a iniciar con el pipeline para servicio de usuario"
                echo "======== Iniciando Build ========"
                sh '''
                    cd services
                    cd Servicio-Usuario
                    npm install
                '''
            }
            post{
                always{
                    echo "======== Terminando Build ========"
                }
            }
        }

        stage("Testing"){
            steps{
                echo "======== Iniciando Tests ========"
                sh '''
                    cd services
                    cd Servicio-Usuario
                    npm test
                '''
            }
            post{
                always{
                    echo "======== Terminando Tests ========"   
                }
            }
        }

        stage("Release"){
            environment {
                // Extract the username and password of our credentials into "DOCKER_CREDENTIALS_USR" and "DOCKER_CREDENTIALS_PSW".
                // (NOTE 1: DOCKER_CREDENTIALS will be set to "your_username:your_password".)
                // The new variables will always be YOUR_VARIABLE_NAME + _USR and _PSW.
                // (NOTE 2: You can't print credentials in the pipeline for security reasons.)
                DOCKER_CREDENTIALS = credentials('dockerhub')
            }
            steps{
                script {
                    
                    dockerImage = docker.build registry + ":$BUILD_NUMBER" 
                }
            }
            post{
                always{
                    echo "======== Terminando Release ========"
                }
            }
        }

        stage("Deploy"){
            steps{
                echo "======== Iniciando Deploy ========"
                echo "aqui deberia hacer el deploy con fabric"
            }
            post{
                always{
                    echo "======== Terminando Deploy ========"   
                }
            }
        }

    }

    post{
        always{
            echo "========always========"
        }
        success{
            echo "========pipeline executed successfully ========"
        }
        failure{
            echo "========pipeline execution failed========"
        }
    }
}