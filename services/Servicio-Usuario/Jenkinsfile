pipeline{
    agent any
    tools {nodejs "node"}
    environment {
    imagename = "crisalva25/sa_servicio-usuario"
    registryCredential = 'dockerhub'
    dockerImage = ''
    }
    stages{
        stage("Build"){
            steps{
                echo "Ahora vamos a iniciar con el pipeline para servicio de usuario"
                echo "======== Iniciando Build ========"
                sh '''
                    cd services
                    cd Servicio-Usuario
                    npm install
                '''
            }
            post{
                always{
                    echo "======== Terminando Build ========"
                }
            }
        }

        stage("Testing"){
            steps{
                echo "======== Iniciando Tests ========"
                sh '''
                    cd services
                    cd Servicio-Usuario
                    npm test
                '''
            }
            post{
                always{
                    echo "======== Terminando Tests ========"   
                }
            }
        }

        stage("Release"){
            environment {
                // The new variables will always be YOUR_VARIABLE_NAME + _USR and _PSW.
                DOCKER_CREDENTIALS = credentials('dockerhub')
            }
            steps{
                sh '''
                    cd services
                    cd Servicio-Usuario
                    docker login -u $DOCKER_CREDENTIALS_USR -p $DOCKER_CREDENTIALS_PSW docker.io
                    docker build -t "crisalva25/sa_servicio-usuario:latest" .
                    docker push "crisalva25/sa_servicio-usuario:latest"
                '''
            }
            post{
                always{
                    echo "======== Terminando Release ========"
                    sh "docker logout"
                }
            }
        }

        stage("Deploy"){
            steps{
                echo "======== Iniciando Deploy ========"
                echo "aqui deberia hacer el deploy con fabric"
            }
            post{
                always{
                    echo "======== Terminando Deploy ========"   
                }
            }
        }

    }

    post{
        always{
            echo "========always========"
        }
        success{
            echo "========pipeline executed successfully ========"
        }
        failure{
            echo "========pipeline execution failed========"
        }
    }
}